\name{renyiresult}
\alias{renyiresult}
\alias{renyiplot}
\alias{renyiaccumresult}
\alias{renyicomp}

\title{Alternative Renyi Diversity Results}

\description{
Provides some alternative methods of obtaining results on Renyi diversity profile values than provided by \code{\link[vegan]{renyi}} (\pkg{vegan}).
}

\usage{
renyiresult(x, y=NULL, factor, level, method = "all",
    scales = c(0, 0.25, 0.5, 1, 2, 4, 8, Inf), evenness = FALSE ,...)

renyiplot(xr, addit=FALSE, pch = 1, 
    xlab = "alpha", ylab = "H-alpha", ylim = NULL,
    labelit = TRUE, legend = TRUE, legend.x="topleft", legend.ncol = 8, 
    col = 1, cex = 1, rainbow = TRUE, evenness = FALSE, ...)

renyiaccumresult(x, y=NULL, factor, level,
    scales=c(0, 0.25, 0.5, 1, 2, 4, 8, Inf), permutations = 100,...)

renyicomp(x, y, factor, sites=Inf,
    scales = c(0, 0.25, 0.5, 1, 2, 4, 8, Inf), permutations = 100, plotit = FALSE, ...)
}

\arguments{
  \item{x}{ Community data frame with sites as rows, species as columns and species abundance as cell values. }
  \item{y}{ Environmental data frame. }
  \item{factor}{ Variable of the environmental data frame that defines subsets to calculate diversity profiles for. }
  \item{level}{ Level of the variable to create the subset to calculate diversity profiles. }
  \item{method}{ Method of calculating the diversity profiles: "all" calculates the diversity of the entire community (all sites pooled together), "s" calculates the diversity of each site separatedly. }
  \item{scales}{ Scale parameter values as in function \code{\link[vegan]{renyi}} (\pkg{vegan}). }
  \item{evenness}{ Calculate or plot the evenness profile. }

  \item{xr}{ Result from \code{\link[vegan]{renyi}} or \code{renyiresult}. }
  \item{addit}{ Add diversity profile to an existing graph. }
  \item{pch}{ Symbol used for drawing the diversity profiles (as in function \code{\link[graphics]{points}}). }
  \item{xlab}{ Label for the horizontal axis. }
  \item{ylab}{ Label for the vertical axis. }
  \item{ylim}{ Limits of the vertical axis. }
  \item{labelit}{ Provide site labels (site names) at beginning and end of the diversity profiles. }
  \item{legend}{ Add the legend (you need to click in the graph where the legend needs to be plotted). }
  \item{legend.x}{ Location of the legend; see also \code{\link[graphics]{legend}}. }
  \item{legend.ncol}{ number of columns for the legend (as in function \code{\link[graphics]{legend}}). }
  \item{col}{ Colour for the diversity profile (as in function \code{\link[graphics]{points}}). }
  \item{cex}{ Character expansion factor (as in function \code{\link[graphics]{points}}).  }
  \item{rainbow}{ Use rainbow colours for the diversity profiles. }

  \item{sites}{ Number of accumulated sites to provide profile values. }
  \item{permutations}{ Number of permutations for the Monte-Carlo simulations for accumulated renyi diversity profiles (estimated by \code{\link[vegan:renyi]{renyiaccum}}). }
  \item{plotit}{ Plot the results (you need to click in the graph where the legend should be plotted). }
  \item{...}{ Other arguments to be passed to functions \code{\link[vegan]{renyi}} or \code{\link[graphics]{plot}}. }
}

\details{
These functions provide some alternative methods of obtaining results with diversity profiles, although function \code{\link[vegan]{renyi}} is always used to calculate the diversity profiles.

The method of calculating the diversity profiles: "all" calculates the diversity profile of the entire community (all sites pooled together), whereas "s" calculates the diversity profile of each site separatedly. The evenness profile is calculated by subtracting the profile value at scale 0 from all the profile values.

Functions \code{renyiresult}, \code{renyiaccumresult} and \code{renyicomp} allow to calculate diversity profiles for subsets of the community and environmental data sets. functions \code{renyiresult} and \code{renyiaccumresult} calculate the diversity profiles for the specified level of a selected environmental variable. Method \code{renyicomp} calculates the diversity profile for all levels of a selected environmental variable separatedly.

Functions \code{renyicomp} and \code{renyiaccumresult} calculate accumulation curves for the Renyi diversity profile by randomised pooling of sites and calculating diversity profiles for the pooled sites as implemented in \code{\link[vegan:renyi]{renyiaccum}}. The method is similar to the random method of species accumulation (\code{\link[vegan]{specaccum}}). If the number of "sites" is not changed from the default, it is replaced by the sample size of the level with the fewest number of sites.

}

\value{
The functions provide alternative methods of obtaining Renyi diversity profiles.
}

\references{
Kindt R., Degrande A., Turyomurugyendo L., Mbosso C., Van Damme P., Simons A.J. (2001). Comparing species richness and evenness contributions to on-farm tree diversity for data sets with varying sample sizes from Kenya, Uganda, Cameroon and Nigeria with randomised diversity profiles. Paper presented at IUFRO conference on forest biometry, modeling and information science, 26-29 June, University of Greenwich, UK

Kindt R. (2002). Methodology for tree species diversification planning for African agroecosystems. Thesis submitted in fulfilment of the requirement of the degree of doctor (PhD) in applied biological sciences. Faculty of agricultural and applied biological sciences, Ghent University, Ghent (Belgium), 332+xi pp.

Kindt R., Van Damme P. & Simons A.J. (2006). Tree diversity in western Kenya: using diversity profiles to characterise richness and evenness. Biodiversity and Conservation 15: 1253-1270.

Kindt, R. & Coe, R. (2005) 
Tree diversity analysis: A manual and
  software for common statistical methods for ecological and
  biodiversity studies.
 
  \url{http://www.worldagroforestry.org/output/tree-diversity-analysis} 

}   

\author{Roeland Kindt (World Agroforestry Centre)}

\seealso{
\code{\link{renyi.long}}, \code{\link{renyicomp.long}}
}

\examples{
library(vegan)
data(dune.env)
data(dune)
Renyi.1 <- renyiresult(dune, y=dune.env, factor='Management', level='NM', 
    method='s')
Renyi.1
renyiplot(Renyi.1, evenness=FALSE, addit=FALSE, pch=1,col='1', cex=1, 
    legend=FALSE)
## CLICK IN THE GRAPH TO INDICATE WHERE THE LEGEND NEEDS TO BE PLACED
## IN CASE THAT YOU OPT FOR LEGEND=TRUE

\dontrun{
# ggplot2 plotting method

Renyi.2 <- renyicomp(dune, y=dune.env, factor='Management', 
  scales=c(0, 0.25, 0.5, 1, 2, 4, 8, Inf), permutations=100, plotit=F)
Renyi.2

library(ggplot2)

# change the theme
# possibly need for extrafont::loadfonts(device="win") to have Arial
# as alternative, use library(ggThemeAssist)
BioR.theme <- theme(
        panel.background = element_blank(),
        panel.border = element_blank(),
        panel.grid = element_blank(),
        axis.line = element_line("gray25"),
        text = element_text(size = 12, family="Arial"),
        axis.text = element_text(size = 10, colour = "gray25"),
        axis.title = element_text(size = 14, colour = "gray25"),
        legend.title = element_text(size = 14),
        legend.text = element_text(size = 14),
        legend.key = element_blank())

renyi.long2 <- renyicomp.long(Renyi.2, label.freq=1)

plotgg1 <- ggplot(data=renyi.long2, aes(x=Scales, y=Diversity, ymax=UPR, ymin=LWR)) + 
    scale_x_discrete() +
    scale_y_continuous(sec.axis = dup_axis(labels=NULL, name=NULL)) +
    geom_line(data=renyi.long2, aes(x=Obs, colour=Grouping), size=2) +
    geom_point(data=subset(renyi.long2, labelit==TRUE), 
        aes(colour=Grouping, shape=Grouping), size=5) +
    geom_ribbon(data=renyi.long2, aes(x=Obs, colour=Grouping), alpha=0.2, show.legend=FALSE) + 
    BioR.theme +
    scale_color_brewer(palette = "Set1") +
    labs(x=expression(alpha), y = "Diversity", colour = "Management", shape = "Management")

plotgg1

# calculate a separate diversity profile for each site
Renyi.3 <- renyiresult(dune, evenness=FALSE, method="s", 
  scales=c(0, 0.25, 0.5, 1, 2, 4, 8, Inf))
Renyi.3

renyi.long3 <- renyi.long(Renyi.3, env.data=dune.env, label.freq=2)

plotgg2 <- ggplot(data=renyi.long3, aes(x=Scales, y=Diversity, group=Grouping)) + 
    scale_x_discrete() +
    scale_y_continuous(sec.axis = dup_axis(name=NULL)) +
    geom_line(aes(colour=Management), size=2) +
    geom_point(data=subset(renyi.long3, labelit==TRUE), 
        aes(colour=Management, shape=Management), size=5) +
    BioR.theme +
    scale_color_brewer(palette = "Set1") +
    labs(x=expression(alpha), y="Diversity", colour="Management")

plotgg2

plotgg3 <- ggplot(data=renyi.long3, aes(x=Scales, y=Diversity, group=Grouping)) + 
    scale_x_discrete() +
    scale_y_continuous(sec.axis = dup_axis(name=NULL)) +
    geom_line(aes(colour=Management), size=1) +
    geom_point(data=subset(renyi.long3, labelit==TRUE), 
        aes(colour=Management, shape=Management), size=2) +
    BioR.theme +
    scale_color_brewer(palette = "Set1") +
    facet_wrap(~ Management) +
    labs(x=expression(alpha), y="Diversity", colour="Management")

plotgg3

} # dontrun
}

\keyword{multivariate} 



